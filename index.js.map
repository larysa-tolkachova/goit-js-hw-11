{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '47526493-0201b9f5d9dd403f56de0598a';\n\nexport function serviceImages(question) {\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: question,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  });\n\n  return fetch(`${BASE_URL}?${params}`).then(response => {\n    if (!response.ok) {\n      throw new Error(\n        'Sorry, there are no images matching your search query. Please try again!'\n      );\n    }\n    return response.json(); //promis\n  });\n}\n","export function creatGallery(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `<li class=\"gallery-item>\n            <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                <img class=\"gallery-image\" src=\"${webformatURL}\" alt=\"${tags}\" width=\"360\" height=\"150\"/>\n            </a>\n                <ul class=\"inform\">\n                    <li class=\"inform-link\">\n                        <h2 class=\"inform-title\">Likes:</h2>\n                        <p class=\"inform-dan>${likes}</p>\n                    </li>\n                    <li class=\"inform-link\">\n                        <h2 class=\"inform-title\">Views:</h2>\n                        <p class=\"inform-dan>${views}</p>\n                    </li>\n                    <li class=\"inform-link\">\n                        <h2 class=\"inform-title\">Comments:</h2>\n                        <p class=\"inform-dan>${comments}</p>\n                    </li>\n                    <li class=\"inform-link\">\n                        <h2 class=\"inform-title\">Downloads:</h2>\n                        <p class=\"inform-dan>${downloads}</p>\n                    </li>\n                </ul>\n            \n    </li>`\n    )\n    .join('');\n}\n","import iziToast from 'izitoast'; // Описаний у документації\nimport 'izitoast/dist/css/iziToast.min.css'; // Додатковий імпорт стилів\nimport SimpleLightbox from 'simplelightbox'; // Описаний в документації\nimport 'simplelightbox/dist/simple-lightbox.min.css'; // Додатковий імпорт стилів\n\nimport { serviceImages } from './js/pixabay-api';\nimport { creatGallery } from './js/render-functions';\n\nconst form = document.querySelector('.group-form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nform.addEventListener('submit', handlerSearch);\n\nfunction handlerSearch(event) {\n  event.preventDefault();\n\n  let question = event.target.elements.query.value.trim(); // input world\n  console.log(event.target.elements);\n  console.log(question);\n  if (!question) {\n    iziToast.show({\n      backgroundColor: '#EF4040',\n      title: '',\n      message: `Enter the data for the search!`,\n      messageColor: '#FFFFFF',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  //   loader.style.display = 'inline-block';\n\n  serviceImages(question) //promise\n    .then(data => {\n      console.log(data);\n      console.log(data.hits.length);\n      console.log(data.hits);\n\n      if (data.hits.length === 0) {\n        iziToast.show({\n          title: '',\n          backgroundColor: '#EF4040',\n          messageColor: '#FFFFFF',\n          message: `Sorry, there are no images matching your search query. Please try again!`,\n          position: 'topRight',\n        });\n      }\n\n      gallery.insertAdjacentHTML('beforeend', creatGallery(data.hits));\n      question = '';\n      // galleryModal.refresh();\n      // loader.style.display = 'none';\n    })\n\n    .catch(error => {\n      console.log(error.message);\n    });\n}\n\n//     .finally(() => event.target.reset());\n\n// для ініціалізації модального вікна\nconst galleryModal = new SimpleLightbox('.gallery a', {\n  captions: true,\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\n// return arr.map((webformatURL, largeImageURL, tags, likes, views, comments, downloads ))\n\n//=============================================================================\n\n// import { imagesSearch } from './js/pixabay-api';\n// import { renderImages } from './js/render-functions';\n\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// import SimpleLightbox from 'simplelightbox';\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// const lightbox = new SimpleLightbox('.gallery a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// import errorImage from './img/error.png';\n\n// const form = document.querySelector('.form');\n// const gallery = document.querySelector('.gallery');\n// const loader = document.querySelector('.loader');\n\n// form.addEventListener('submit', handleSearch);\n\n// function handleSearch(event) {\n//   event.preventDefault();\n//   gallery.innerHTML = '';\n//   let inputElement = event.target.elements.name;\n//   const inputSearch = inputElement.value.trim();\n//   if (!inputSearch) {\n//     iziToast.show({\n//       title: '',\n//       iconUrl: `${errorImage}`,\n//       backgroundColor: 'red',\n//       messageColor: 'white',\n//       message: `Enter the data for the search!`,\n//       position: 'topRight',\n//     });\n//     return;\n//   }\n\n//   loader.style.display = 'inline-block';\n\n//   imagesSearch(inputSearch)\n//     .then(arrImg => {\n//       if (arrImg.length === 0) {\n//         iziToast.show({\n//           title: '',\n//           iconUrl: `${errorImage}`,\n//           backgroundColor: 'red',\n//           messageColor: 'white',\n//           message: `Sorry, there are no images matching your search query. Please try again!`,\n//           position: 'topRight',\n//         });\n//       }\n//       gallery.insertAdjacentHTML('beforeend', renderImages(arrImg));\n//       lightbox.refresh();\n//       inputElement.value = '';\n//       loader.style.display = 'none';\n//     })\n//     .catch(error => console.log(error));\n// }\n"],"names":["BASE_URL","API_KEY","serviceImages","question","params","response","creatGallery","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","gallery","handlerSearch","event","iziToast","data","error","SimpleLightbox"],"mappings":"iyBAAA,MAAMA,EAAW,2BACXC,EAAU,qCAET,SAASC,EAAcC,EAAU,CACtC,MAAMC,EAAS,IAAI,gBAAgB,CACjC,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,CAAG,EAED,OAAO,MAAM,GAAGH,CAAQ,IAAII,CAAM,EAAE,EAAE,KAAKC,GAAY,CACrD,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,0EACR,EAEI,OAAOA,EAAS,MACpB,CAAG,CACH,CCpBO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA,4CACoCL,CAAa;AAAA,kDACPD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,+CAK7BC,CAAK;AAAA;AAAA;AAAA;AAAA,+CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,+CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,+CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,UAKnD,EACA,KAAK,EAAE,CACZ,CC9BA,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAU,SAAS,cAAc,UAAU,EAClC,SAAS,cAAc,SAAS,EAE/CD,EAAK,iBAAiB,SAAUE,CAAa,EAE7C,SAASA,EAAcC,EAAO,CAC5BA,EAAM,eAAc,EAEpB,IAAIf,EAAWe,EAAM,OAAO,SAAS,MAAM,MAAM,OAGjD,GAFA,QAAQ,IAAIA,EAAM,OAAO,QAAQ,EACjC,QAAQ,IAAIf,CAAQ,EAChB,CAACA,EAAU,CACbgB,EAAS,KAAK,CACZ,gBAAiB,UACjB,MAAO,GACP,QAAS,iCACT,aAAc,UACd,SAAU,UAChB,CAAK,EACD,MACD,CAIDjB,EAAcC,CAAQ,EACnB,KAAKiB,GAAQ,CACZ,QAAQ,IAAIA,CAAI,EAChB,QAAQ,IAAIA,EAAK,KAAK,MAAM,EAC5B,QAAQ,IAAIA,EAAK,IAAI,EAEjBA,EAAK,KAAK,SAAW,GACvBD,EAAS,KAAK,CACZ,MAAO,GACP,gBAAiB,UACjB,aAAc,UACd,QAAS,2EACT,SAAU,UACpB,CAAS,EAGHH,EAAQ,mBAAmB,YAAaV,EAAac,EAAK,IAAI,CAAC,EAC/DjB,EAAW,EAGjB,CAAK,EAEA,MAAMkB,GAAS,CACd,QAAQ,IAAIA,EAAM,OAAO,CAC/B,CAAK,CACL,CAKqB,IAAIC,EAAe,aAAc,CACpD,SAAU,GACV,aAAc,MACd,aAAc,GAChB,CAAC"}